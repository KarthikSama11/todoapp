{"version":3,"sources":["components/Button.jsx","components/Header.jsx","components/TaskItem.jsx","components/Tasks.jsx","components/AddTask.jsx","App.js","index.js"],"names":["Button","text","color","onAdd","style","backgroundColor","onClick","className","Header","title","showAdd","TaskItem","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","Tasks","tasks","map","index","Math","random","AddTask","addNewTask","useState","setText","setReminder","onSubmit","e","preventDefault","console","log","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","allTasks","setAllTasks","length","filter","item","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.76caa402.chunk.js","sourcesContent":["const Button = ({ text, color, onAdd }) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<button\r\n\t\t\t\tstyle={{ backgroundColor: color }}\r\n\t\t\t\tonClick={onAdd}\r\n\t\t\t\tclassName=\"btn\"\r\n\t\t\t>\r\n\t\t\t\t{text}\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Button;\r\n","import Button from \"./Button\";\r\nimport PropTypes from \"prop-types\";\r\nconst Header = ({ title, onAdd, showAdd }) => {\r\n\treturn (\r\n\t\t<header className=\"header\">\r\n\t\t\t<h1>{title}</h1>\r\n\t\t\t<Button\r\n\t\t\t\ttext={!showAdd ? \"Add\" : \"Close\"}\r\n\t\t\t\tcolor={!showAdd ? \"#1ed760\" : \"red\"}\r\n\t\t\t\tonAdd={onAdd}\r\n\t\t\t/>\r\n\t\t</header>\r\n\t);\r\n};\r\nHeader.propTypes = {\r\n\ttitle: PropTypes.string,\r\n\tcolor: PropTypes.string,\r\n};\r\n\r\nexport default Header;\r\n","import {FaTimes} from 'react-icons/fa'\r\nconst TaskItem = ({task,onDelete,onToggle}) => {\r\n  return (\r\n    <>\r\n      <div className={`task ${task.reminder ?'reminder':\"\"}`} onDoubleClick={()=>onToggle(task.id)} >\r\n        <h4 >{task.text}</h4>\r\n        <FaTimes style={{color:\"red\",cursor:'pointer'}} onClick={()=>onDelete(task.id)} />\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TaskItem\r\n","import TaskItem from \"./TaskItem\"\r\n\r\nconst Tasks = ({tasks,onDelete,onToggle}) => {\r\n  return (\r\n    <>\r\n    {\r\n      tasks.map((task,index)=>{ \r\n        return(\r\n        <TaskItem key={index*Math.random()} task={task} onDelete={onDelete} onToggle={onToggle}/>\r\n        )}\r\n      )\r\n    }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Tasks\r\n","import {useState} from 'react'\r\n\r\nconst AddTask = ({addNewTask}) => {\r\n  const [text,setText] = useState('')\r\n  const [reminder,setReminder] = useState(false)\r\n  \r\n  function onSubmit(e){\r\n    e.preventDefault()\r\n\r\n    if(!text){\r\n      alert('Add a Task');\r\n      return;\r\n    }\r\n    addNewTask(text,reminder)\r\n    console.log('form submitted');\r\n    setText(\"\");\r\n    setReminder(false);\r\n  }\r\n  return (\r\n    <form className='add-form' onSubmit={onSubmit}>\r\n      <div className=\"form-control\">\r\n        <label >Task</label>\r\n        <input type=\"text\" placeholder='Add a Task' value={text} onChange={(e)=>setText(e.target.value)}/>\r\n      </div>\r\n      <div className=\"form-control form-control-check\">\r\n        <label >Set Reminder</label>\r\n        <input type=\"checkbox\"\r\n        checked={reminder}\r\n        value={reminder} onChange={(e)=>setReminder(e.currentTarget.checked)} />\r\n      </div>\r\n      <input type=\"submit\" value='Save Task'  className='btn btn-block'/>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default AddTask\r\n","import { useState } from \"react\";\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport AddTask from \"./components/AddTask\";\n\nfunction App() {\n\tconst [showAddTask, setShowAddTask] = useState(false);\n\tconst [allTasks, setAllTasks] = useState([]);\n\tif (showAddTask.length === 0) setShowAddTask(!showAddTask);\n\t//Add Task ::>>\n\tfunction addTask(text, reminder) {\n\t\tconsole.log(\"task-added\");\n\t\tconst id = allTasks.length * Math.random();\n\t\tsetAllTasks([...allTasks, { id, text, reminder }]);\n\t\t// setShowAddTask(!showAddTask);\n\t}\n\t//Delete Task ::>>\n\tfunction deleteTask(id) {\n\t\tsetAllTasks(allTasks.filter((item) => item.id !== id));\n\t\t// setAllTasks(allTasks.map())\n\t\tconsole.log(\"task-deleted\", id);\n\t}\n\t// Toggle Reminder ::>>\n\tfunction toggleReminder(id) {\n\t\tsetAllTasks(\n\t\t\tallTasks.map((task) =>\n\t\t\t\ttask.id === id ? { ...task, reminder: !task.reminder } : task\n\t\t\t)\n\t\t);\n\t\tconsole.log(\"reminder-altered\");\n\t}\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<Header\n\t\t\t\ttitle=\"Tasks\"\n\t\t\t\tonAdd={() => setShowAddTask(!showAddTask)}\n\t\t\t\tshowAdd={showAddTask}\n\t\t\t/>\n\n\t\t\t{showAddTask && <AddTask addNewTask={addTask} />}\n\n\t\t\t{allTasks.length > 0 ? (\n\t\t\t\t<Tasks\n\t\t\t\t\ttasks={allTasks}\n\t\t\t\t\tonDelete={deleteTask}\n\t\t\t\t\tonToggle={toggleReminder}\n\t\t\t\t/>\n\t\t\t) : (\n\t\t\t\t\"No Tasks Yet\"\n\t\t\t)}\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}